[{"/Users/madhukar_jha/Documents/learnings/Code/react/Microfrontends/custom-microfrontend/container/src/index.js":"1","/Users/madhukar_jha/Documents/learnings/Code/react/Microfrontends/custom-microfrontend/container/src/App.js":"2","/Users/madhukar_jha/Documents/learnings/Code/react/Microfrontends/custom-microfrontend/container/src/reportWebVitals.js":"3","/Users/madhukar_jha/Documents/learnings/Code/react/Microfrontends/custom-microfrontend/container/src/MicroFrontend.js":"4"},{"size":457,"mtime":1611929292578,"results":"5","hashOfConfig":"6"},{"size":1878,"mtime":1611930882534,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1609664777405,"results":"8","hashOfConfig":"6"},{"size":2601,"mtime":1611896640205,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"9z7kz4",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"/Users/madhukar_jha/Documents/learnings/Code/react/Microfrontends/custom-microfrontend/container/src/index.js",[],["22","23"],"/Users/madhukar_jha/Documents/learnings/Code/react/Microfrontends/custom-microfrontend/container/src/App.js",["24"],"import React from 'react';\nimport { NavLink, BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport './App.css';\nimport MicroFrontend from './MicroFrontend';\n\nconst {\n  REACT_APP_CONTENT_APP1: subapp1,\n  REACT_APP_CONTENT_APP2: subapp2,\n} = process.env;\n\nconst App1 = ({ history }) => (\n  <MicroFrontend history={history} host={subapp1} name=\"subapp1\" />\n);\nconst App2 = ({ history }) => (\n  <MicroFrontend history={history} host={subapp2} name=\"subapp2\" />\n);\nconst Home = () => (\n  <>\n    <p>Rendered by Container</p>\n  </>\n);\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div style={{ padding: 25, display: \"flex\" }}>\n        <div style={{ padding: \"0px 15px\" }}>\n          <NavLink\n            style={{\n              textDecoration: \"none\",\n              fontWeight: \"bold\",\n              color: \"#282c34\",\n              fontSize: 20\n            }}\n            to=\"/home\"\n          >\n            Home\n          </NavLink>\n        </div>\n        <div style={{ padding: \"0px 15px\" }}>\n          <NavLink\n            style={{\n              textDecoration: \"none\",\n              fontWeight: \"bold\",\n              color: \"#282c34\",\n              fontSize: 20\n            }}\n            to=\"/subapp1\"\n          >\n            SubApp1\n          </NavLink>\n        </div>\n        <div style={{ padding: \"0px 15px\" }}>\n          <NavLink\n            style={{\n              textDecoration: \"none\",\n              fontWeight: \"bold\",\n              color: \"#282c34\",\n              fontSize: 20\n            }}\n            to=\"/subapp2\"\n          >\n            SubApp2\n          </NavLink>\n        </div>\n      </div>\n\n      <Switch>\n        <Route path=\"/home\" component={Home} />\n        <Route path=\"/subapp1\" render={() => <App1 />} />\n        <Route path=\"/subapp2\" render={() => <App2 />} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/madhukar_jha/Documents/learnings/Code/react/Microfrontends/custom-microfrontend/container/src/reportWebVitals.js",[],"/Users/madhukar_jha/Documents/learnings/Code/react/Microfrontends/custom-microfrontend/container/src/MicroFrontend.js",["25"],"import React from 'react';\n\nclass MicroFrontend extends React.Component {\n  componentDidMount() {\n    const { name, host, document } = this.props;\n    const scriptId = `micro-frontend-script-${name}`;\n\n    if (document.getElementById(scriptId)) {\n      this.renderMicroFrontend();\n      return;\n    }\n\n    fetch(`${host}/asset-manifest.json`)\n      .then(res => res.json())\n      .then(manifest => {\n        manifest[\"entrypoints\"].map((entry => {\n          if (typeof manifest[\"files\"][entry] !== \"undefined\" && manifest[\"files\"][entry] !== \"undefined\") {\n            if (entry.endsWith('.css')) {\n              const link = document.createElement('link');\n              link.id = scriptId;\n              link.href = `${process.env.NODE_ENV === \"production\" ? host.slice(0, host.lastIndexOf('/')) : host}${manifest[\"files\"][entry]}`;\n              link.onload = this.renderMicroFrontend;\n              link.rel = \"stylesheet\"\n              document.head.appendChild(link);\n            }\n            const script = document.createElement('script');\n            script.id = scriptId;\n            script.crossOrigin = '';\n            script.src = `${process.env.NODE_ENV === \"production\" ? host.slice(0, host.lastIndexOf('/')) : host}${manifest[\"files\"][entry]}`;\n            script.onload = this.renderMicroFrontend;\n            document.head.appendChild(script);\n          }\n        })\n        )\n        const script = document.createElement('script');\n        script.id = scriptId;\n        script.crossOrigin = '';\n        script.src = `${process.env.NODE_ENV === \"production\" ? host.slice(0, host.lastIndexOf('/')) : host}${manifest[\"files\"][\"main.js\"]}`;\n        script.onload = this.renderMicroFrontend;\n        document.head.appendChild(script);\n        const link = document.createElement('link');\n        link.id = scriptId;\n        link.href = `${process.env.NODE_ENV === \"production\" ? host.slice(0, host.lastIndexOf('/')) : host}${manifest[\"files\"][\"main.css\"]}`;\n        link.onload = this.renderMicroFrontend;\n        link.rel = \"stylesheet\"\n        document.head.appendChild(link);\n      });\n  }\n\n  componentWillUnmount() {\n    const { name, window } = this.props;\n\n    window[`unmount${name}`] && window[`unmount${name}`](`${name}-container`);\n  }\n\n  renderMicroFrontend = () => {\n    const { name, window, history } = this.props;\n\n    window[`render${name}`] && window[`render${name}`](`${name}-container`, history);\n  };\n\n  render() {\n    return <main id={`${this.props.name}-container`} />;\n  }\n}\n\nMicroFrontend.defaultProps = {\n  document,\n  window,\n};\n\nexport default MicroFrontend;",["26","27"],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":2,"column":49,"nodeType":"34","messageId":"35","endLine":2,"endColumn":57},{"ruleId":"36","severity":1,"message":"37","line":16,"column":44,"nodeType":"38","messageId":"39","endLine":16,"endColumn":46},{"ruleId":"28","replacedBy":"40"},{"ruleId":"30","replacedBy":"41"},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["42"],["43"],"no-global-assign","no-unsafe-negation"]